# kubernetes-templates/databases/mysql/mysql-complete.yaml
# Complete MySQL Deployment Template
# Combines all necessary resources for a standard deployment.

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ${APP_NAME}-mysql-config
  labels:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: ${APP_NAME}-mysql
    app.kubernetes.io/part-of: ${APP_NAME}
data:
  MYSQL_DATABASE: "${DATABASE_NAME}"
  MYSQL_USER: "${DATABASE_USER}"

---
apiVersion: v1
kind: Secret
metadata:
  name: ${APP_NAME}-mysql-credentials
  labels:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: ${APP_NAME}-mysql
    app.kubernetes.io/part-of: ${APP_NAME}
stringData:
  MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
  MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
type: Opaque

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ${APP_NAME}-mysql-pvc
  labels:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: ${APP_NAME}-mysql
    app.kubernetes.io/part-of: ${APP_NAME}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: ${STORAGE_SIZE}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${APP_NAME}-mysql-deployment
  labels:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: ${APP_NAME}-mysql
    app.kubernetes.io/part-of: ${APP_NAME}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: ${APP_NAME}-mysql
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mysql
        app.kubernetes.io/instance: ${APP_NAME}-mysql
        app.kubernetes.io/part-of: ${APP_NAME}
    spec:
      containers:
        - name: mysql
          image: mysql:${MYSQL_VERSION}
          ports:
            - containerPort: 3306
          envFrom:
            - configMapRef:
                name: ${APP_NAME}-mysql-config
            - secretRef:
                name: ${APP_NAME}-mysql-credentials
          readinessProbe:
            exec:
              command: ["mysqladmin", "ping", "-h", "127.0.0.1"]
            initialDelaySeconds: 15
            timeoutSeconds: 2
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            exec:
              command: ["mysqladmin", "ping", "-h", "127.0.0.1"]
            initialDelaySeconds: 45
            timeoutSeconds: 2
            periodSeconds: 20
            failureThreshold: 3
          resources:
            requests:
              cpu: "${MYSQL_CPU_REQUEST}"
              memory: "${MYSQL_MEMORY_REQUEST}"
            limits:
              cpu: "${MYSQL_CPU_LIMIT}"
              memory: "${MYSQL_MEMORY_LIMIT}"
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: ${APP_NAME}-mysql-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: ${APP_NAME}-mysql-service
  labels:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: ${APP_NAME}-mysql
    app.kubernetes.io/part-of: ${APP_NAME}
spec:
  selector:
    app.kubernetes.io/instance: ${APP_NAME}-mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306